# Com banco de dados
version: '3'
services:
  zookeeper:
    image: zookeeper:3.4.9
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888
    volumes:
      - ./data/zookeeper/data:/data
      - ./data/zookeeper/datalog:/datalog
  kafka:
    image: bitnami/kafka:latest
    hostname: kafka
    ports:
      - "9091:9091"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: PLAINTEXT://kafka:19091,PLAINTEXT_HOST://${DOCKER_HOST_IP:-127.0.0.1}:9091
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:19091,PLAINTEXT_HOST://${DOCKER_HOST_IP:-127.0.0.1}:9091
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    volumes:
      - ./data/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zookeeper
  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:19091"
    depends_on:
      - kafka
  postgresql:
    container_name: postgresql
    image: postgres:13.2-alpine
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: talk_db_local
    ports:
      - "5432:5432"
  schema-registry:
    container_name: schema-registry
    image: 'confluentinc/cp-schema-registry:6.0.8.amd64'
    depends_on:
      - zookeeper
      - kafka
    ports:
      - '8081:8081'
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper:2181
      - SCHEMA_REGISTRY_HOST_NAME=localhost
      - SCHEMA_REGISTRY_LISTENERS=http://0.0.0.0:8081
  kafka-connect:
    container_name: kafka-connect
    image: 'confluentinc/cp-kafka-connect:5.5.12-1-ubi8.amd64'
    depends_on:
      - zookeeper
      - kafka
      - schema-registry
    ports:
      - '8083:8083'
    environment:
      - CONNECT_BOOTSTRAP_SERVERS=kafka:19091
      - CONNECT_REST_ADVERTISED_HOST_NAME=kafka-connect
      - CONNECT_GROUP_ID=kafka-connect-group
      - CONNECT_CONFIG_STORAGE_TOPIC=kafka-connect-configs
      - CONNECT_OFFSET_STORAGE_TOPIC=kafka-connect-offsets
      - CONNECT_STATUS_STORAGE_TOPIC=kafka-connect-status
      - CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR=1
      - CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR=1
      - CONNECT_STATUS_STORAGE_REPLICATION_FACTOR=1
      - CONNECT_KEY_CONVERTER=io.confluent.connect.avro.AvroConverter
      - CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL=http://schema-registry:8081
      - CONNECT_VALUE_CONVERTER=io.confluent.connect.avro.AvroConverter
      - CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL=http://schema-registry:8081


#Sobre o Zookeeper: https://dattell.com/data-architecture-blog/what-is-zookeeper-how-does-it-support-kafka/
#Detalhes das vari√°veis de ambiente:
#Zookeper: https://hub.docker.com/_/zookeeper
#Kafka: https://docs.confluent.io/platform/current/kafka/multi-node.html
#Kafdrop: https://github.com/obsidiandynamics/kafdrop
